model_checkpoint:
  # _target_: pytorch_lightning.callbacks.ModelCheckpoint
  monitor: ${train.monitor} # name of the logged metric which determines when model is improving
  mode: ${train.mode} # can be "max" or "min"
  save_top_k: 1 # save k best models (determined by above metric)
  save_last: True # additionaly always save model from last epoch
  dirpath: "checkpoints/"
  # this saves an annoying "epoch=12" which makes it annoying to pass on the command line; epochs are being logged through the verbose flag and logger anyways
  # seems like you can override the '.format_checkpoint_name' method of ModelCheckpoint to change this, but not worth
  # filename: "{epoch:02d}",
  filename: ${train.monitor}
  auto_insert_metric_name: False
  verbose: True

model_checkpoint_every_n_steps:
  monitor: train/loss # name of the logged metric which determines when model is improving
  mode: min # can be "max" or "min"
  save_top_k: 0 # Do not save any "best" models; this callback is being used to save every n train steps
  save_last: True # additionally always save model from last epoch
  dirpath: "checkpoints/"
  filename: train/loss
  auto_insert_metric_name: False
  verbose: True
  every_n_train_steps: 100

#model_checkpoint_every_epoch:
#  monitor: trainer/epoch  # name of the logged metric which determines when model is improving
#  mode: max # can be "max" or "min"
#  save_top_k: 1 # Do not save any "best" models; this callback is being used to save every n train steps
#  save_last: False # additionally always save model from last epoch
#  dirpath: "checkpoints/"
#  filename: null
#  auto_insert_metric_name: False
#  verbose: True
#  every_n_epochs: 1
# early_stopping:
#   _target_: pytorch_lightning.callbacks.EarlyStopping
#   monitor: "val/acc" # name of the logged metric which determines when model is improving
#   mode: "max" # can be "max" or "min"
#   patience: 100 # how many epochs of not improving until training stops
#   min_delta: 0 # minimum change in the monitored metric needed to qualify as an improvement
